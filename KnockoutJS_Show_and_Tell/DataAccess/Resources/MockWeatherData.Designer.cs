//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MockWeatherData {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MockWeatherData() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataAccess.Resources.MockWeatherData", typeof(MockWeatherData).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;response&quot;: {
        ///		&quot;version&quot;: &quot;0.1&quot;
        ///		,&quot;termsofService&quot;: &quot;http://www.wunderground.com/weather/api/d/terms.html&quot;
        ///		,&quot;features&quot;: {
        ///		&quot;conditions&quot;: 1
        ///		}
        ///	}
        ///		,	&quot;current_observation&quot;: {
        ///		&quot;image&quot;: {
        ///		&quot;url&quot;:&quot;http://icons-ak.wxug.com/graphics/wu2/logo_130x80.png&quot;,
        ///		&quot;title&quot;:&quot;Weather Underground&quot;,
        ///		&quot;link&quot;:&quot;http://www.wunderground.com&quot;
        ///		},
        ///		&quot;display_location&quot;: {
        ///		&quot;full&quot;:&quot;Milwaukee, WI&quot;,
        ///		&quot;city&quot;:&quot;Milwaukee&quot;,
        ///		&quot;state&quot;:&quot;WI&quot;,
        ///		&quot;state_name&quot;:&quot;Wisconsin&quot;,
        ///		&quot;country&quot;:&quot;US&quot;,
        ///		&quot;country_iso3166&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Z53201 {
            get {
                return ResourceManager.GetString("Z53201", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;response&quot;: {
        ///		&quot;version&quot;: &quot;0.1&quot;
        ///		,&quot;termsofService&quot;: &quot;http://www.wunderground.com/weather/api/d/terms.html&quot;
        ///		,&quot;features&quot;: {
        ///		&quot;conditions&quot;: 1
        ///		}
        ///	}
        ///		,	&quot;current_observation&quot;: {
        ///		&quot;image&quot;: {
        ///		&quot;url&quot;:&quot;http://icons-ak.wxug.com/graphics/wu2/logo_130x80.png&quot;,
        ///		&quot;title&quot;:&quot;Weather Underground&quot;,
        ///		&quot;link&quot;:&quot;http://www.wunderground.com&quot;
        ///		},
        ///		&quot;display_location&quot;: {
        ///		&quot;full&quot;:&quot;Green Bay, WI&quot;,
        ///		&quot;city&quot;:&quot;Green Bay&quot;,
        ///		&quot;state&quot;:&quot;WI&quot;,
        ///		&quot;state_name&quot;:&quot;Wisconsin&quot;,
        ///		&quot;country&quot;:&quot;US&quot;,
        ///		&quot;country_iso3166&quot;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Z54229 {
            get {
                return ResourceManager.GetString("Z54229", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;response&quot;: {
        ///		&quot;version&quot;: &quot;0.1&quot;
        ///		,&quot;termsofService&quot;: &quot;http://www.wunderground.com/weather/api/d/terms.html&quot;
        ///		,&quot;features&quot;: {
        ///		&quot;conditions&quot;: 1
        ///		}
        ///	}
        ///		,	&quot;current_observation&quot;: {
        ///		&quot;image&quot;: {
        ///		&quot;url&quot;:&quot;http://icons-ak.wxug.com/graphics/wu2/logo_130x80.png&quot;,
        ///		&quot;title&quot;:&quot;Weather Underground&quot;,
        ///		&quot;link&quot;:&quot;http://www.wunderground.com&quot;
        ///		},
        ///		&quot;display_location&quot;: {
        ///		&quot;full&quot;:&quot;Chicago, IL&quot;,
        ///		&quot;city&quot;:&quot;Chicago&quot;,
        ///		&quot;state&quot;:&quot;IL&quot;,
        ///		&quot;state_name&quot;:&quot;Illinois&quot;,
        ///		&quot;country&quot;:&quot;US&quot;,
        ///		&quot;country_iso3166&quot;:&quot;US&quot;, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Z60290 {
            get {
                return ResourceManager.GetString("Z60290", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;response&quot;: {
        ///		&quot;version&quot;: &quot;0.1&quot;
        ///		,&quot;termsofService&quot;: &quot;http://www.wunderground.com/weather/api/d/terms.html&quot;
        ///		,&quot;features&quot;: {
        ///		&quot;conditions&quot;: 1
        ///		}
        ///	}
        ///		,	&quot;current_observation&quot;: {
        ///		&quot;image&quot;: {
        ///		&quot;url&quot;:&quot;http://icons-ak.wxug.com/graphics/wu2/logo_130x80.png&quot;,
        ///		&quot;title&quot;:&quot;Weather Underground&quot;,
        ///		&quot;link&quot;:&quot;http://www.wunderground.com&quot;
        ///		},
        ///		&quot;display_location&quot;: {
        ///		&quot;full&quot;:&quot;Sanantonio, TX&quot;,
        ///		&quot;city&quot;:&quot;Sanantonio&quot;,
        ///		&quot;state&quot;:&quot;TX&quot;,
        ///		&quot;state_name&quot;:&quot;Texas&quot;,
        ///		&quot;country&quot;:&quot;US&quot;,
        ///		&quot;country_iso3166&quot;:&quot;U [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Z78201 {
            get {
                return ResourceManager.GetString("Z78201", resourceCulture);
            }
        }
    }
}
